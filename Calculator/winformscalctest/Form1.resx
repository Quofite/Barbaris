<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jd2/BTXdnOMAAAAASUVORK5CYII=
</value>
  </data>
</root>