bettersql.js - пакет для Node.js, использующий mysql2 и упрощающий работу с ним.
bettersql.js убирает всю последовательность создания подключения к СУБД MySQL и вызова его команд в одну функцию, которая импортируется в ваш проект.

!!! ДЛЯ РАБОТЫ НЕОБХОДИМ ПАКЕТ "mysql2" (npm install mysql2) !!!

ЧАСТЬ 1 - СОЗДАНИЕ ПОДКЛЮЧЕНИЯ
Для создания объекта подключения у любой пустой переменной/объекта вызывается метод createConnectionObject(<хост>, <имя пользователя>, <пароль>, <имя БД>).
Пример: conn = createConnectionObject("localhost", "root", "root", "dbName")
Если пароль отсутствует, то оставте 3-ий параметр пустым: a = createConnectionObject("localhost", "root", "", "dbName")

ЧАСТЬ 2 - ПРОСТЫЕ ПОДКЛЮЧЕНИЯ
Для подключения и выполнения нужны лишь объект подключения, созданный в первой части, SQL-команда, массив-фильтр (если он не нужен в простом запросе, то используйте filter = []) и функция, которая обработает данные(логгер и т.п.).
В функции отбратного вызова НЕ ДОЛЖНО быть ключевое слово return и она должна принимать результат выполнения запроса к БД.
Для выполнения запроса, у объекта bettersql вызывается метод basicQuery(<объект_подключения>, <sql_запрос>, <массив-фильтр>, <функция_обратного_вызова>)
Пример использования находится в файле examples.js в разделе basic

ЧАСТЬ 3 - ОТВЕТ НА ВЕБ-СТАРНИЦУ С ИСПОЛЬЗОВАНИЕМ EXPRESS.JS
Для ответа на веб-страницу, помимо всё тех же объекта подключения, sql-строки, массива-фильтра и колбэка, последним параметром передается объект http-ответа, который создается в маршрутизаторе
В функции отбратного вызова то, что должно вывестись, должно возвращаться из колбэка ключевым словом return
Для выполнения запроса, у объекта bettersql вызывается метод responseQuery(<объект_подключения>, <sql_запрос>, <массив-фильтр>, <функция_обратного_вызова>, <объект_http-ответа>)
Пример использования находится в файле examples.js в разделе http-response